#!/usr/bin/env perl

=head DESCRIPTION

Automatically `git tag` by travisCI.

When the pull request is merged and the branch name is like "bump-version-N.N.N",
the merge commit is automatically tagged as `vN.N.N`.

=head SYNOPSIS

    % _tools/autotag

=cut

use 5.014;
use warnings;

use IPC::Cmd qw/run/;
use JSON::PP;

my $OWNER = 'mackerelio';
my $REPO  = 'mackerel-agent';

sub http_get {
    my $url = shift;
    my ($ok, $err, undef, $stdout) = run(command => [qw{curl -sf}, $url]);
    return {
        success => $ok,
        content => join('', @$stdout),
    };
}

sub get_branch_from_msg {
    my $msg = shift;

    my ($pr_num, $branch) = $msg =~ /^[a-f0-9]{7} Merge pull request #([0-9]+) from (.*)$/;
    return unless $pr_num;

    my $res = http_get(
        sprintf 'https://api.github.com/repos/%s/%s/pulls/%d?state=closed', $OWNER, $REPO, $pr_num
    );
    unless ($res->{success}) {
        warn 'API request failed'; return;
    }
    my $data = decode_json $res->{content};
    my $label = $data->{head}{label};
    $label =~ s!:!/!; # $user:branch/name -> $user/branch/name

    if ($label ne $branch) {
        return;
    }
    ($data->{head}{ref}, $data->{title}, $data->{body});
}

sub tag_name_from_branch {
    my $branch = shift;

    my ($tag) = $branch =~ m!^bump-version-([0-9]+(?:\.[0-9]+){2})$!;
    $tag && "v$tag";
}

### main
if (!$ENV{HARNESS_ACTIVE}) {
    main();
} else {
    # When called via `prove`, tests will run.
    run_tests();
}

sub main {
    # e.g. 492764e Merge pull request #3 from Songmu/fix/remote
    chomp(my $msg = `git log HEAD~.. --merges --oneline`);
    unless ($msg) {
        say 'not a merged commit'; return;
    }

    my ($branch, $title, $body) = get_branch_from_msg($msg);
    unless ($branch) {
        say 'not a pull request'; return;
    }
    my $tag = tag_name_from_branch($branch);
    unless ($tag) {
        say 'not a autotag target'; return;
    }

    my %tags = map { chomp; ($_ => 1) } `git tag`;
    if ($tags{$tag}) {
        say "tag: $tag already tagged"; return;
    }
    system(qw/git tag -a/, $tag, '-m', "$title\n\n$body");
    system(qw/git push --tags/);
}

sub run_tests {
    require Test::More;
    Test::More->import;

    my ($branch) = get_branch_from_msg('58a535b Merge pull request #44 from naokibtn/feature-munin');
    is($branch, 'feature-munin');
    ($branch) = get_branch_from_msg('86b6a58 Merge pull request #36 from mackerelio/bump-version-0.5.0');
    is($branch, 'bump-version-0.5.0');

    is(tag_name_from_branch('bump-version-0.5.0'), 'v0.5.0');
    ok(!tag_name_from_branch('feature-hoge'));

    done_testing();
}
